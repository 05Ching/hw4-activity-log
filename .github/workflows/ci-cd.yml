name: CI/CD Deployment Pipeline

on:
  push:
    branches: [ master ]
  workflow_dispatch:
 
permissions:
  contents: write

jobs:
  # Step 1️⃣ Build Job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build project
        run: |
          npm install || true
          npm run build || echo "No build script found, skipping..."
          zip -r build.zip .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  # Step 2️⃣ Deploy to Staging
  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Create staging release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="staging-v${{ github.run_number }}"
          NOTE="Testing pre-production release"
          echo "Deploying Staging Release: $TAG"
          gh release delete "$TAG" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE" --prerelease

  # Step 3️⃣ Deploy to Production (manual approval required)
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Create production release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG="prod-v${{ github.run_number }}"
          NOTE="Production release"
          echo "Deploying Production Release: $TAG"
          gh release delete "$TAG" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE" --latest
